params.metaphlan_db = "$baseDir/databases/metaphlan"
params.kraken2_db = "/work_ifs/ikmb_repository/databases/Kraken2/2020-03_viruses"
params.filter_dir = "/work_ifs/ikmb_repository/databases/bloomfilter"

params {
	'genomes' {
		'human' {
			bowtie_index = "/home/sukmb465/Documents/Eike/Nextflow/metagenomic-profiling/databases/bowtie/hg37dec_v0.1"
			bloom_index = "${params.filter_dir}/human_hg38/human_hg38.bf"
		}
		
		'mouse' {
			bowtie_index = "/work_ifs/ikmb_repository/references/iGenomes/references/Mus_musculus/Ensembl/GRCm38/Sequence/Bowtie2Index/genome"
			bloom_index = "${params.filter_dir}/mouse_mm10/mouse_mm10.bf"
		}
		'chimp' {
			bowtie_index = "/work_ifs/ikmb_repository/references/iGenomes/references/Pan_troglodytes/Ensembl/CHIMP2.1.4/Sequence/Bowtie2Index/genome"
			bloom_index = "${params.filter_dir}/chimp_3/chimp_3.bf"
		}
		
	}
}


process {
    executor='local'
    cpus = 4
    memory = 8.GB
    time=48.h
}

singularity {
	enabled = true
	//runOptions= "-B /home/sukmb465"
	cacheDir = "$baseDir/cache"
} 

profiles {
	local {
		executor.name= "local"
		executor.quieSize=100
		executor.cpus=4
		}
	}
	
params {
  // Defaults only, expecting to be overwritten
  max_memory = 16.GB
  max_cpus = 4
  max_time = 24.h
  maxMultiqcEmailFileSize = 25.MB
}

// Job paramaters to set for this environment

params.outdir = "output" 

// Process setting

process {

  // Global cluster parameters

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  withName:'filterReads|cleanPEReads|cleanSEReads' {
	cpus = { check_max( 4 * task.attempt, 'cpus' ) }
  	memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  	time = { check_max( 48.h * task.attempt, 'time' ) }
  }
  withName:trimReads {
        cpus = { check_max( 4 * task.attempt, 'cpus' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 48.h * task.attempt, 'time' ) }
  }
  
  withName: runFastQC {
	cpus = { check_max( 4 * task.attempt, 'cpus' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
  }

  withName:runMetaphlan {
        cpus = { check_max( 4 * task.attempt, 'cpus' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
  }

  withName:runSample2Markers {
	cpus = { check_max( 4 * task.attempt, 'cpus' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
  }

  withName: BloomFilter {
	cpus = { check_max( 4 * task.attempt, 'cpus' ) }
        memory = { check_max( 16.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
  }
  
  withLabel: 'bbmap' {
	cpus = { check_max( 4 * task.attempt, 'cpus' ) }
	time = { check_max( 12.h * task.attempt, 'time' ) }
	container = "docker://quay.io/biocontainers/bbmap:38.87--h1296035_0"
  }

  withLabel: 'Megahit' {
        cpus = { check_max( 4 * task.attempt, 'cpus' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
  }
  withLabel: 'multiqc' {
	container = "docker://quay.io/biocontainers/multiqc:1.9--pyh9f0ad1d_0"
  }
  withLabel: kraken {
        container = "docker://quay.io/biocontainers/kraken2:2.0.8_beta--pl526hc9558a2_1"
  }
  /*
  withLabel: 'bowtie2' {
	container = "docker://quay.io/biocontainers/bowtie2:2.4.2--py38h1c8e9b9_1"
  }
  withLabel: 'metaphlan' {
	container = "docker://quay.io/biocontainers/metaphlan:3.0--pyh5ca1d4c_4"
  }

  withLabel: 'fastqc' {
	container = "docker://quay.io/biocontainers/fastqc:0.11.9--0"
  }
  withLabel: 'biobloom' {
        container = 'ikmb/virus-pipe:latest'
  }
 */


  
}


